name: Build Kernel Module

on:
  workflow_dispatch:
    inputs:
      module_dir:
        description: 'Module directory to build'
        required: true
        type: choice
        options:
        - exianb-dev
        - exianb
        - ovo
        - proti-fd
        - proti-hook
        - offset
        - hello-world
        default: 'exianb-dev'
      build_mode:
        description: 'Build mode'
        required: true
        type: choice
        options:
        - ddk
        - lkm
        default: 'ddk'

jobs:
  build:
    name: Build ${{ inputs.module_dir }}.ko ${{ inputs.build_mode == 'ddk' && format('for {0}', matrix.kmi) || format('{0}.{1}', matrix.version, matrix.sub_level) }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # DDK builds
          - build_mode: ddk
            kmi: android12-5.10
          - build_mode: ddk
            kmi: android13-5.10
          - build_mode: ddk
            kmi: android13-5.15
          - build_mode: ddk
            kmi: android14-5.15
          - build_mode: ddk
            kmi: android14-6.1
          - build_mode: ddk
            kmi: android15-6.6
          #- build_mode: ddk
          #  kmi: android16-6.12
          # LKM builds
          - build_mode: lkm
            version: android12-5.10
            sub_level: 185
            os_patch_level: 2023-09
          - build_mode: lkm
            version: android13-5.15
            sub_level: 137
            os_patch_level: 2023-12
          - build_mode: lkm
            version: android14-6.1
            sub_level: 84
            os_patch_level: 2024-07
          - build_mode: lkm
            version: android15-6.6
            sub_level: 30
            os_patch_level: 2024-08

    steps:
    - name: Checkout source code
      uses: actions/checkout@v4

    - name: DDK Build
      if: inputs.build_mode == 'ddk' && matrix.build_mode == 'ddk'
      run: |
        echo "=== Building ${{ inputs.module_dir }}.ko for KMI: ${{ matrix.kmi }} ==="
        
        # Build with DDK
        make -C $KERNEL_SRC M=$PWD/${{ inputs.module_dir }} modules
        
        echo "=== Build completed ==="

        # Create output directory
        mkdir -p /github/workspace/out
        
        # Copy with KMI-specific naming
        OUTPUT_NAME="${{ inputs.module_dir }}-${{ matrix.kmi }}.ko"
        cp "${{ inputs.module_dir }}/${{ inputs.module_dir }}.ko" "/github/workspace/out/$OUTPUT_NAME"
        llvm-strip -d "/github/workspace/out/$OUTPUT_NAME"
        echo "Built: $OUTPUT_NAME"

    - name: LKM Build
      if: inputs.build_mode == 'lkm' && matrix.build_mode == 'lkm'
      uses: ./.github/workflows/gki-kernel.yml
      with:
        version: ${{ matrix.version }}
        version_name: ${{ matrix.version }}.${{ matrix.sub_level }}
        tag: ${{ matrix.version }}-${{ matrix.os_patch_level }}
        module_dir: ${{ inputs.module_dir }}
        module_name: ${{ inputs.module_dir }}
        module_config: PVM_MOD
        build_lkm: true

    - name: Upload DDK Artifact
      if: inputs.build_mode == 'ddk' && matrix.build_mode == 'ddk'
      uses: actions/upload-artifact@v4
      with:
        name: ${{ inputs.module_dir }}-${{ matrix.kmi }}
        path: /github/workspace/out/${{ inputs.module_dir }}-${{ matrix.kmi }}.ko
